name: Build & Release All Platforms

on:
  push:
    tags:
      - "v*.*.*"   # Trigger on version tags like v1.0.0

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.2'

      - name: Build macOS ARM64
        run: |
          CGO_ENABLED=1 GOOS=darwin GOARCH=arm64 go build -o irestore_darwin_arm64 ./cmd/irestore

      - name: Build macOS AMD64
        run: |
          CGO_ENABLED=1 GOOS=darwin GOARCH=amd64 go build -o irestore_darwin_amd64 ./cmd/irestore

      - name: Create macOS Universal Binary
        run: |
          lipo -create -output irestore_macos_universal irestore_darwin_amd64 irestore_darwin_arm64
          zip irestore_macos_universal.zip irestore_macos_universal

      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macOS
          path: irestore_macos_universal.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.2'

      - name: Build Linux AMD64 (no CGO)
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o irestore_linux_amd64 ./cmd/irestore
          zip irestore_linux_amd64.zip irestore_linux_amd64

      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Linux
          path: irestore_linux_amd64.zip

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.2'

      - name: Build Windows AMD64 (no CGO)
        run: |
          $env:CGO_ENABLED="0"
          $env:GOOS="windows"
          $env:GOARCH="amd64"
          go build -o irestore_windows_amd64.exe ./cmd/irestore
          Compress-Archive -Path irestore_windows_amd64.exe -DestinationPath irestore_windows_amd64.zip

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Windows
          path: irestore_windows_amd64.zip

  release:
    needs: [build-macos, build-linux, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: List downloaded files
        run: ls -R dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
